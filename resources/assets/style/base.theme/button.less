//
// Component: Button
//
// ========================================================================

.hook-button() {
    border: @button-border-width solid @button-border-color;
    .border-radius;
    text-transform: @button-text-transform;
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
    -webkit-transition-property: color, background-color, border-color;
    transition-property: color, background-color, border-color;
}

.hook-button-hover() {}

.hook-button-focus() {}

.hook-button-active() {}


// Style modifiers
// ========================================================================
.hook-button-default() {
    // border: @button-border-width solid #ced0da;
    // .gradient(#ffffff, #f1f3f7);
}

.hook-button-default-hover() {
    // border-color: @button-default-hover-border;
}

.uk-button-default:focus {
    background-color: @button-default-focus-background;
}

.hook-button-default-active() {
    // border-color: @button-default-active-border;
}

.uk-button-border {
    border-radius: @global-border-radius;
    border-color: @global-danger-background;
    background-color: white;
    color: @global-danger-background;
}

.uk-button {
    padding: 5 40;
}
//
// Primary
//

.hook-button-primary() {
    // border: @button-border-width solid transparent;
}

.hook-button-primary-hover() {}

.hook-button-primary-active() {
    box-shadow: @form-primary-shadow;
}

.uk-button-primary:focus {
    box-shadow: @form-primary-shadow;
}

//
// Secondary
//

.hook-button-secondary() {
    border: @button-border-width solid transparent;
}

.hook-button-secondary-hover() {}

.hook-button-secondary-active() {}

//
// Danger
//

.hook-button-danger() {
    border: @button-border-width solid transparent;
}

.hook-button-danger-hover() {}

.hook-button-danger-active() {
    box-shadow: @form-danger-shadow;
}

.uk-button-danger:focus {
    box-shadow: @form-danger-shadow;
}

//
// Success
//

.uk-button-success {
    background-color: @button-success-background;
    color: @button-success-color;
}

/* Hover + Focus */
.uk-button-success:hover:not([disabled]),
.uk-button-success:focus:not([disabled]) {
    background-color: @button-success-hover-background;
    color: @button-success-hover-color;
}

.uk-button-success:focus:not([disabled]) {
    box-shadow: @form-success-shadow;
}

/* OnClick + Active */
.uk-button-success:active:not([disabled]),
.uk-button-success.uk-active:not([disabled]) {
    background-color: @button-success-active-background;
    color: @button-success-active-color;
    box-shadow: @form-success-shadow;
}

//
// Warning
//

.uk-button-warning {
    background-color: @button-warning-background;
    color: @button-warning-color;
}

/* Hover + Focus */
.uk-button-warning:hover:not([disabled]),
.uk-button-warning:focus:not([disabled]) {
    background-color: @button-warning-hover-background;
    color: @button-warning-hover-color;
}

.uk-button-warning:focus:not([disabled]) {
    box-shadow: @form-warning-shadow;
}

/* OnClick + Active */
.uk-button-warning:active:not([disabled]),
.uk-button-warning.uk-active:not([disabled]) {
    background-color: @button-warning-active-background;
    color: @button-warning-active-color;
    box-shadow: @form-warning-shadow;
}

//
// Juice
//

.uk-button-juice {
    background-color: @button-juice-background;
    color: @button-juice-color;
}

/* Hover + Focus */
.uk-button-juice:hover:not([disabled]),
.uk-button-juice:focus:not([disabled]) {
    background-color: @button-juice-hover-background;
    color: @button-juice-hover-color;
}

.uk-button-juice:focus:not([disabled]) {
    box-shadow: @form-juice-shadow;
}

/* OnClick + Active */
.uk-button-juice:active:not([disabled]),
.uk-button-juice.uk-active:not([disabled]) {
    background-color: @button-juice-active-background;
    color: @button-juice-active-color;
    box-shadow: @form-juice-shadow;
}

// Disabled
// ========================================================================

.uk-button-success:disabled:extend(.uk-button-default:disabled) {}
.uk-button-warning:disabled:extend(.uk-button-default:disabled) {}
.uk-button-juice:disabled:extend(.uk-button-default:disabled) {}

.hook-button-disabled() {
    border-color: @button-disabled-border;
    cursor: not-allowed;
}


// .uk-button-success:disabled {
//     .hook-button-disabled;
// }

// Size modifiers
// ========================================================================

.hook-button-small() {}

.hook-button-large() {}


// Text modifier
// ========================================================================

.hook-button-text() {

    position: relative;

    &::before {
        content: "";
        position: absolute;
        bottom: 0;
        left: 0;
        right: 100%;
        border-bottom: @button-text-border-width solid @button-text-border;
        -webkit-transition: right 0.3s ease-out;
        transition: right 0.3s ease-out;
    }

}

.hook-button-text-hover() {

    &::before { right: 0; }

}

.hook-button-text-disabled() {

    &::before { display: none; }

}


// Link modifier
// ========================================================================

.hook-button-link() {}


// Miscellaneous
// ========================================================================

.hook-button-misc() {

    /* Group
     ========================================================================== */

    /*
     * Collapse border
     */

    .uk-button-group > .uk-button + .uk-button,
    // .uk-button-group > * + * .uk-button,
    .uk-button-group > * + * { margin-left: 2px; }

    /*
     * Create position context to superimpose the successor elements border
     * Known issue: If you use an `a` element as button and an icon inside,
     * the active state will not work if you click the icon inside the button
     * Workaround: Just use a `button` or `input` element as button
     */

    .uk-button-group .uk-button {
        overflow: hidden;
        border: none;
        line-height: @global-control-height;

        &:hover,
        &:focus,
        &:active,
        &.uk-active {
            position: relative;
            z-index: 1;
        }

        &:focus,
        &:active {
            background: @global-default-background-focus;
        }

        &.uk-active {
            background-color: @global-default-background-active;
            border-color: transparent;
            color: @global-inverse-color;
        }
    }

    .uk-button-group > .uk-button,
    .uk-button-group > * > .uk-button {
        border-radius: 0;
        padding-left: @button-padding-horizontal;
    }

    .uk-button-group > .uk-button:first-child,
    .uk-button-group > *:first-child > .uk-button {
        border-top-left-radius: @global-border-radius;
        border-bottom-left-radius: @global-border-radius;
    }

    .uk-button-group > .uk-button:last-child,
    .uk-button-group > *:last-child > .uk-button {
        border-top-right-radius: @global-border-radius;
        border-bottom-right-radius: @global-border-radius;
    }

    .uk-button-group-input {
        input[type="checkbox"],
        input[type="radio"] {
            display: none;
            opacity: 0;

            &:checked + span {
                display: block;
                background-color: @global-default-background-active;
                color: @global-inverse-color;
                padding-left: @button-padding-horizontal;
                padding-right: @button-padding-horizontal;
                margin-left: -@button-padding-horizontal;
                margin-right: -@button-padding-horizontal;
            }
        }
    }
}

// Inverse
// ========================================================================

@inverse-button-default-background:            transparent;
@inverse-button-default-color:                 @inverse-global-emphasis-color;
@inverse-button-default-hover-background:      transparent;
@inverse-button-default-hover-color:           @inverse-global-emphasis-color;
@inverse-button-default-active-background:     transparent;
@inverse-button-default-active-color:          @inverse-global-emphasis-color;

@inverse-button-text-color:                    @inverse-global-emphasis-color;
@inverse-button-text-hover-color:              @inverse-global-emphasis-color;

.hook-inverse-button-default() { border-color: @inverse-global-color; }
.hook-inverse-button-default-hover() { border-color: @inverse-global-emphasis-color; }
.hook-inverse-button-default-active() { border-color: @inverse-global-emphasis-color; }

.hook-inverse-button-primary() {}
.hook-inverse-button-primary-hover() {}
.hook-inverse-button-primary-active() {}

.hook-inverse-button-secondary() {}
.hook-inverse-button-secondary-hover() {}
.hook-inverse-button-secondary-active() {}

.hook-inverse-button-text() {
    &::before { border-bottom-color: @inverse-global-emphasis-color; }
}
.hook-inverse-button-text-hover() {}
.hook-inverse-button-text-disabled() {}

.hook-inverse-button-link() {}
